name: main

on:
  push:
    branches:
      - main
  pull_request:

env:
  DOCKER_IMAGE: username/...

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.20"

      - name: Go Format
        run: gofmt -s -w . && git diff --exit-code

      - name: Go Vet
        run: go vet ./...

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.50.1

      - name: Test
        run: go test -v -count=1 -race -shuffle=on -coverprofile=coverage.txt -json ./... > test.json

      - name: Annotate tests
        if: always()
        uses: guyarb/golang-test-annotations@v0.7.0
        with:
          test-results: test.json

      - name: Build and push to CR
        if: github.event_name == 'push'
        uses: chuhlomin/actions/docker-build-push@main
        with:
          username: username
          password: ${{ secrets.DOCKER_PASSWORD }}
          image_name: ${{ env.DOCKER_IMAGE }}
          tags: ${{ env.DOCKER_IMAGE }}:${{ github.sha }}

      # - name: Build and push to CR
      #   uses: chuhlomin/actions/docker-build-push@main
      #   with:
      #     registry: ghcr.io
      #     username: ${{ github.actor }}
      #     password: ${{ secrets.PKG_TOKEN }}
      #     image_name: ${{ env.DOCKER_IMAGE }}
      #     tags: ${{ env.DOCKER_IMAGE }}:${{ github.sha }}

      - name: Deploy to GKE
        if: github.event_name == 'push' && !contains(github.event.head_commit.message, '[skip deploy]')
        uses: chuhlomin/actions/deploy-gke@main
        with:
          service_account_key: ${{ secrets.GKE_SA_KEY }}
          project_id: ${{ secrets.GKE_PROJECT }}
          cluster_name: ...
          location: ...
          vars: |
            replicas: 2
            cpu_request: 10m
            cpu_limit: 10m
            mem_request: 20Mi
            mem_limit: 20Mi
            name: ...
            app: ...
            env: dev
            image: ${{ env.DOCKER_IMAGE }}:${{ github.sha }}
            domain: ...
            db_host: postgres
            db_name: ...
            db_username: ...
            db_password_base64: ${{ secrets.DB_PASSWORD_DEV_BASE64 }}
            redis_addr: redis:6379
          rollout_status_wait: deployment/...
